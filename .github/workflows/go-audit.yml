# Golang github workflow action.
#
# Thanks to - 
# Ref: alexedwards.net/blog/ci-with-go-and-github-actions
#

name: Golang Audit


on:
    push: # Run job on push commit
        branches: [main]
    pull_request: # Run job on pull request activity
        branches: [main]
    schedule: # Run job at the scheduled time (UTC).
        - cron: '0 10 * * 1' # run "At 10:00 on Monday every week."


jobs:
    go-audit:   # job-id
        name: Go Audit ${{ matrix.go }} # Name of job inc. Go versions matrix
        runs-on: ubuntu-22.04 # OS Version
        timeout-minutes: 5 # Just in case.
        strategy:
            fail-fast: true # Cancel any job in progress if any matrix job fails
            matrix:
                go: ['stable', 'oldstable']
        
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Go
              uses: actions/setup-go@v4
              with:
                token: ${{ secrets.GH_DOTCOM_TOKEN}}
                go-version: ${{ matrix.go }}

            - name: Show Go Version
              run: go version

            # Check dependencies
            - name: Go Tidy
              run: go mod tidy && git diff --exit-code

            - name: Go Mod
              run: go mod download

            - name: Go Mod Verify
              run: go mod verify

            # Format and Vet
            - name: Run Go Format
              run: gofmt -s -w . && get diff --exit-code
                
            - name: Run Go Vet
              run: go vet ./...

            - name: Install Staticcheck
              run: go install honnef.co/go/tools/cmd/staticcheck@latest

            - name: Run Staticcheck
              run: staticcheck ./...

            - name: Install Golint
              run: go install golang.org/x/lint/golint@latest

            - name: Run Golint
              run: golint ./...

            # Generate and Build Packages (ignore producing executables)
            - name: Go Generate
              run: go generate ./... && git diff --exit-code

            - name: Build
              run: go build -v -o /dev/null ./...

            # Test - runs "*_test.go"
            - name: Run Tests
              run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt -vet=off ./...

            # Benchmark
            - name: Go Benchmark
              run: go test -v -shuffle=on -run=- -bench=. -benchtime=1x ./...

            # Coverage
            #- name: Upload Coverage
